import javax.tools.JavaCompiler

buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.javen.sizuka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

tasks.withType(JavaCompiler) {
    options.encoding = "UTF-8"
}

dependencies {
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '1.5.7.RELEASE'
	compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.2.3'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.1")
	compile group: 'com.alibaba', name: 'fastjson', version: '1.2.40'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter')
	compile('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile 'com.alibaba:druid:1.0.27'
	compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
}


jar {
	String someString = ''
	configurations.runtime.each {someString = someString + " lib\\"+it.name} //遍历项目的所有依赖的jar包赋值给变量someString
	manifest {
		attributes 'Main-Class': 'com.each.dubboMainEnd'
		attributes 'Class-Path': someString
	}
}
//清除上次的编译过的文件
task clearPj(type:Delete){
	delete 'build','target'
}

task copyJar(type:Copy){
	from configurations.runtime
	into ('build/libs/lib')

}
//把JAR复制到目标目录
task release(type: Copy,dependsOn: [build,copyJar]) {
//    from  'conf'
//    into ('build/libs/eachend/conf') // 目标位置
}